var search_data = {"index":{"searchIndex":["admin","admincontroller","analysis","applicationcontroller","applicationhelper","emailer","emailercontroller","homecontroller","ibi","ibicontroller","lomb","numbers","relaxationsession","relaxationsessionscontroller","relaxationsessionshelper","staticpagescontroller","status","user","usercontroller","usershelper","sample()","about()","after_sign_in_path_for()","analyse()","avg_var()","configure_devise_params()","contact()","contact()","dispatch_email()","display_base_errors()","fasper()","fft()","find_first_by_auth_conditions()","find_first_by_auth_conditions()","fourier()","full_title()","get_amplitude()","get_c1pre()","get_data()","get_data()","get_frequency()","get_lf_peak()","get_lf_perc()","get_magnitude()","get_max_hr()","get_mcf()","get_min_hr()","get_power()","get_test()","get_time()","get_ttr()","get_wave()","get_y1med()","get_y1pre()","gravatar_for()","help()","home()","index()","index()","index()","index()","initialize()","initialize()","is_float?()","is_resonant()","is_valid()","leaderboard()","min_max()","new()","new_authenticate()","nni()","parse_xml()","prepare()","privacy()","realft()","send_email()","show()","show()","show_relaxation_session()","sign()","spread()","terms()","to_magnitude()","readme"],"longSearchIndex":["admin","admincontroller","analysis","applicationcontroller","applicationhelper","emailer","emailercontroller","homecontroller","ibi","ibicontroller","lomb","numbers","relaxationsession","relaxationsessionscontroller","relaxationsessionshelper","staticpagescontroller","status","user","usercontroller","usershelper","relaxationsessionshelper#sample()","staticpagescontroller#about()","applicationcontroller#after_sign_in_path_for()","analysis::analyse()","lomb::avg_var()","applicationcontroller#configure_devise_params()","emailercontroller#contact()","staticpagescontroller#contact()","emailercontroller#dispatch_email()","applicationhelper#display_base_errors()","lomb::fasper()","relaxationsessionshelper#fft()","admin::find_first_by_auth_conditions()","user::find_first_by_auth_conditions()","lomb::fourier()","applicationhelper#full_title()","lomb::get_amplitude()","numbers::get_c1pre()","numbers::get_data()","relaxationsessionshelper#get_data()","lomb::get_frequency()","lomb::get_lf_peak()","lomb::get_lf_perc()","relaxationsessionshelper#get_magnitude()","analysis::get_max_hr()","analysis::get_mcf()","analysis::get_min_hr()","analysis::get_power()","numbers::get_test()","analysis::get_time()","analysis::get_ttr()","numbers::get_wave()","numbers::get_y1med()","numbers::get_y1pre()","usershelper#gravatar_for()","staticpagescontroller#help()","staticpagescontroller#home()","admincontroller#index()","homecontroller#index()","ibicontroller#index()","usercontroller#index()","analysis::initialize()","lomb::initialize()","relaxationsessionshelper#is_float?()","lomb::is_resonant()","analysis::is_valid()","usercontroller#leaderboard()","lomb::min_max()","relaxationsessionshelper::new()","usercontroller#new_authenticate()","analysis::nni()","admincontroller#parse_xml()","analysis::prepare()","staticpagescontroller#privacy()","lomb::realft()","emailer#send_email()","admincontroller#show()","usercontroller#show()","usercontroller#show_relaxation_session()","lomb::sign()","lomb::spread()","staticpagescontroller#terms()","relaxationsessionshelper#to_magnitude()",""],"info":[["Admin","","Admin.html","",""],["AdminController","","AdminController.html","",""],["Analysis","","Analysis.html","","<p>Analyses raw data from database. Input parameter is an array of IBIs (in\nmilliseconds). Calculates all …\n"],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["Emailer","","Emailer.html","",""],["EmailerController","","EmailerController.html","",""],["HomeController","","HomeController.html","",""],["Ibi","","Ibi.html","",""],["IbiController","","IbiController.html","",""],["Lomb","","Lomb.html","","<p>Performs Lomb analysis. Input parameters are two equal length arrays; the\nfirst is the time series, and …\n"],["Numbers","","Numbers.html","",""],["RelaxationSession","","RelaxationSession.html","",""],["RelaxationSessionsController","","RelaxationSessionsController.html","",""],["RelaxationSessionsHelper","","RelaxationSessionsHelper.html","",""],["StaticPagesController","","StaticPagesController.html","",""],["Status","","Status.html","",""],["User","","User.html","",""],["UserController","","UserController.html","",""],["UsersHelper","","UsersHelper.html","",""],["Sample","RelaxationSessionsHelper","RelaxationSessionsHelper.html#method-i-Sample","()","<p>Sample class to generate FFT. No error corrections, no noise removal,\ninterpolation.\n"],["about","StaticPagesController","StaticPagesController.html#method-i-about","()",""],["after_sign_in_path_for","ApplicationController","ApplicationController.html#method-i-after_sign_in_path_for","(resource_or_scope)","<p>Overwriting the sign_in redirect path method\n"],["analyse","Analysis","Analysis.html#method-c-analyse","(ibi)","<p>Calculate all necessary information. Finds min/ max HR. Generates x/ y\nseries for (resonant) PSD vs time. …\n"],["avg_var","Lomb","Lomb.html#method-c-avg_var","(vector)","<p>Returns average and variance of a vector. var =\nsum((avg(vec)-vec)**2)/vec.length\n"],["configure_devise_params","ApplicationController","ApplicationController.html#method-i-configure_devise_params","()",""],["contact","EmailerController","EmailerController.html#method-i-contact","()",""],["contact","StaticPagesController","StaticPagesController.html#method-i-contact","()",""],["dispatch_email","EmailerController","EmailerController.html#method-i-dispatch_email","()",""],["display_base_errors","ApplicationHelper","ApplicationHelper.html#method-i-display_base_errors","(resource)","<p>Handling base errors (model errors that are not matched to a specific form\nfield such as credit card, …\n"],["fasper","Lomb","Lomb.html#method-c-fasper","(x, y)","<p>???\n"],["fft","RelaxationSessionsHelper","RelaxationSessionsHelper.html#method-i-fft","(input)","<p>Fast Fourier Transform. Implementation is based of gregfjohnson. Original\ncode can be found at gregfjohnson.com/fftruby/ …\n"],["find_first_by_auth_conditions","Admin","Admin.html#method-c-find_first_by_auth_conditions","(warden_conditions)",""],["find_first_by_auth_conditions","User","User.html#method-c-find_first_by_auth_conditions","(warden_conditions)",""],["fourier","Lomb","Lomb.html#method-c-fourier","(data)","<p>Fast Fourier transform?\n"],["full_title","ApplicationHelper","ApplicationHelper.html#method-i-full_title","(page_title)","<p>Returns the full title on a per-page basis.\n"],["get_amplitude","Lomb","Lomb.html#method-c-get_amplitude","()",""],["get_c1pre","Numbers","Numbers.html#method-c-get_c1pre","()",""],["get_data","Numbers","Numbers.html#method-c-get_data","()",""],["get_data","RelaxationSessionsHelper","RelaxationSessionsHelper.html#method-i-get_data","()","<p>defines random data\n"],["get_frequency","Lomb","Lomb.html#method-c-get_frequency","()",""],["get_lf_peak","Lomb","Lomb.html#method-c-get_lf_peak","()","<p>Returns frequency and its corresponding power of the peak in LF band.\n"],["get_lf_perc","Lomb","Lomb.html#method-c-get_lf_perc","()","<p>Returns the percentage of LF band over the total.\n"],["get_magnitude","RelaxationSessionsHelper","RelaxationSessionsHelper.html#method-i-get_magnitude","()","<p>Returns magnitude.\n"],["get_max_hr","Analysis","Analysis.html#method-c-get_max_hr","()",""],["get_mcf","Analysis","Analysis.html#method-c-get_mcf","()",""],["get_min_hr","Analysis","Analysis.html#method-c-get_min_hr","()",""],["get_power","Analysis","Analysis.html#method-c-get_power","()",""],["get_test","Numbers","Numbers.html#method-c-get_test","()",""],["get_time","Analysis","Analysis.html#method-c-get_time","()",""],["get_ttr","Analysis","Analysis.html#method-c-get_ttr","()",""],["get_wave","Numbers","Numbers.html#method-c-get_wave","()",""],["get_y1med","Numbers","Numbers.html#method-c-get_y1med","()",""],["get_y1pre","Numbers","Numbers.html#method-c-get_y1pre","()",""],["gravatar_for","UsersHelper","UsersHelper.html#method-i-gravatar_for","(user)","<p>Returns the Gravatar (gravatar/com/) for the given user. @param: user\nobject. @return: image tag for …\n"],["help","StaticPagesController","StaticPagesController.html#method-i-help","()",""],["home","StaticPagesController","StaticPagesController.html#method-i-home","()",""],["index","AdminController","AdminController.html#method-i-index","()",""],["index","HomeController","HomeController.html#method-i-index","()",""],["index","IbiController","IbiController.html#method-i-index","()",""],["index","UserController","UserController.html#method-i-index","()",""],["initialize","Analysis","Analysis.html#method-c-initialize","(ibi)","<p>Initialise.\n"],["initialize","Lomb","Lomb.html#method-c-initialize","(x, y)","<p>Initialise.\n"],["is_float?","RelaxationSessionsHelper","RelaxationSessionsHelper.html#method-i-is_float-3F","()","<p>True if string is a valid float, else false.\n"],["is_resonant","Lomb","Lomb.html#method-c-is_resonant","()","<p>Input parameters are two equal length arrays x (frequency) and y (power).\nReturns true if total LF power …\n"],["is_valid","Analysis","Analysis.html#method-c-is_valid","(input)","<p>Checks if input data is valid.\n"],["leaderboard","UserController","UserController.html#method-i-leaderboard","()",""],["min_max","Lomb","Lomb.html#method-c-min_max","(vector)","<p>Returns minimum and maximum values.\n"],["new","RelaxationSessionsHelper","RelaxationSessionsHelper.html#method-c-new","(ibi)",""],["new_authenticate","UserController","UserController.html#method-i-new_authenticate","()",""],["nni","Analysis","Analysis.html#method-c-nni","(x, y, r)","<p>Nearest neighbour interpolation. Input parameters are two equal length\narrays x and y, and a sampling …\n"],["parse_xml","AdminController","AdminController.html#method-i-parse_xml","()",""],["prepare","Analysis","Analysis.html#method-c-prepare","(ibi)","<p>Prepares the raw data for Lomb analysis. Input parameter is an array of\nIBIs in milliseconds. Returns …\n"],["privacy","StaticPagesController","StaticPagesController.html#method-i-privacy","()",""],["realft","Lomb","Lomb.html#method-c-realft","(data)","<p>???\n"],["send_email","Emailer","Emailer.html#method-i-send_email","(user_info)",""],["show","AdminController","AdminController.html#method-i-show","()",""],["show","UserController","UserController.html#method-i-show","()",""],["show_relaxation_session","UserController","UserController.html#method-i-show_relaxation_session","()",""],["sign","Lomb","Lomb.html#method-c-sign","(b, a)","<p>Returns |b| if a &gt; 0; else -|b|.\n"],["spread","Lomb","Lomb.html#method-c-spread","(x, y, data)","<p>???\n"],["terms","StaticPagesController","StaticPagesController.html#method-i-terms","()",""],["to_magnitude","RelaxationSessionsHelper","RelaxationSessionsHelper.html#method-i-to_magnitude","(input)","<p>Converts complex numbers (x+yi) to magnitude. Defined by: sqrt(x^2+y^2).\nReturns new vector of magnitudes …\n"],["README","","README_rdoc.html","","<p>README\n<p>This README would normally document whatever steps are necessary to get the\napplication up and …\n"]]}}